{ 'R_1.7.2.txt': 
   { '$$addClass': [ '$$jqLite', 'element', 'className' ],
     '$$CookieReader': [ '$document' ],
     '$$CookieReaderProvider': [],
     '$$CookieWriter': [ '$document', '$log', '$browser' ],
     '$$IsDocumentHiddenProvider': [],
     '$$jqLiteProvider': [],
     '$$QProvider': [],
     '$$RAFProvider': [],
     '$$removeClass': [ '$$jqLite', 'element', 'className' ],
     '$$SanitizeUriProvider': [],
     '$$TestabilityProvider': [],
     '$AnchorScrollProvider': [],
     '$AriaProvider': [],
     '$BrowserProvider': [],
     '$CacheFactoryProvider': [],
     '$CompileProvider': [ '$provide', '$$sanitizeUriProvider' ],
     '$ControllerProvider': [],
     '$DocumentProvider': [],
     '$ExceptionHandlerProvider': [],
     '$FilterProvider': [ '$provide' ],
     '$HttpBackendProvider': [],
     '$HttpParamSerializerJQLikeProvider': [],
     '$HttpParamSerializerProvider': [],
     '$HttpProvider': [],
     '$InterpolateProvider': [],
     '$IntervalProvider': [],
     '$LocationProvider': [],
     '$LogProvider': [],
     '$ParseProvider': [],
     '$QProvider': [],
     '$RootScopeProvider': [],
     '$RouteParamsProvider': [],
     '$RouteProvider': [],
     '$SanitizeProvider': [],
     '$SceDelegateProvider': [],
     '$SceProvider': [],
     '$SnifferProvider': [],
     '$TemplateCacheProvider': [],
     '$TemplateRequestProvider': [],
     '$TimeoutProvider': [],
     '$WindowProvider': [],
     '$xhrFactoryProvider': [],
     addDateMinutes: [ 'date', 'minutes' ],
     addSetValidityMethod: [ 'context' ],
     adjustMatcher: [ 'matcher' ],
     adjustMatchers: [ 'matchers' ],
     allowAutoBootstrap: [ 'document' ],
     ampmGetter: [ 'date', 'formats' ],
     angularInit: [ 'element', 'bootstrap' ],
     annotate: [ 'fn', 'strictDi', 'name' ],
     anonFn: [ 'fn' ],
     applyAnimationClassesFactory: [ '$$jqLite' ],
     applyAnimationFromStyles: [ 'element', 'options' ],
     applyAnimationStyles: [ 'element', 'options' ],
     applyAnimationToStyles: [ 'element', 'options' ],
     applyGeneratedPreparationClasses: [ 'element', 'event', 'options' ],
     applyInlineStyle: [ 'node', 'styleTuple' ],
     arrayRemove: [ 'array', 'value' ],
     assertArg: [ 'arg', 'name', 'reason' ],
     assertArgDefined: [ 'args', 'index', 'name' ],
     assertArgFn: [ 'arg', 'name', 'acceptArrayAnnotation' ],
     assertCompareNodes: [ 'a', 'b', 'not' ],
     assertHidden: [ 'node' ],
     assertNotHasOwnProperty: [ 'name', 'context' ],
     assertVisible: [ 'node' ],
     assignableAST: [ 'ast' ],
     ASTCompiler: [ '$filter' ],
     ASTInterpreter: [ '$filter' ],
     badInputChecker: [ 'scope', 'element', 'attr', 'ctrl', 'parserName' ],
     baseExtend: [ 'dst', 'objs', 'deep' ],
     baseInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     baseThey: [ 'msg', 'vals', 'spec', 'itFn' ],
     BenchmarkController: [ '$scope' ],
     bind: [ 'self', 'fn' ],
     bindJQuery: [],
     blockKeyframeAnimations: [ 'node', 'applyBlock' ],
     blockTransitions: [ 'node', 'duration' ],
     bootstrap: [ 'element', 'modules', 'config' ],
     Browser: [ 'window', 'document', '$log', '$sniffer' ],
     browserSupportsCssAnimations: [],
     canonicalizeForJsonStringify: [ 'unused_key', 'object' ],
     capabilitiesForBrowserStack: [ 'capabilities' ],
     capabilitiesForSauceLabs: [ 'capabilities' ],
     checkboxInputType: 
      [ 'scope',
        'element',
        'attr',
        'ctrl',
        '$sniffer',
        '$browser',
        '$filter',
        '$parse' ],
     checkBranchPattern: [ 'version', 'branchPattern' ],
     childrenTagsOf: [ 'element' ],
     classDirective: [ 'name', 'selector' ],
     clearGeneratedClasses: [ 'element', 'options' ],
     computeCssStyles: [ '$window', 'element', 'properties' ],
     concat: [ 'array1', 'array2', 'index' ],
     concatWithSpace: [ 'a', 'b' ],
     config: [ '$compileProvider' ],
     convertDatetimeData: [ 'dataObj' ],
     convertNumberData: [ 'dataObj', 'currencySymbols' ],
     convertTimezoneToLocal: [ 'date', 'timezone', 'reverse' ],
     copy: [ 'source', 'destination', 'maxDepth' ],
     copyNestedParserState: [ 'src', 'dst' ],
     correctedLocaleId: [ 'localeID' ],
     countDecimals: [ 'num' ],
     createAsync: [ 'doneFn' ],
     createControllerDecorator: [],
     createDateInputType: [ 'type', 'regexp', 'parseDate', 'format' ],
     createDateParser: [ 'regexp', 'mapping' ],
     createEventHandler: [ 'element', 'events' ],
     createHttpBackend: 
      [ '$browser',
        'createXhr',
        '$browserDefer',
        'callbacks',
        'rawDocument' ],
     createHttpBackendMock: [ '$rootScope', '$timeout', '$delegate', '$browser' ],
     createInjector: [ 'modulesToLoad', 'strictDi' ],
     createLocalCacheLookup: [],
     createMap: [],
     createMockStyleSheet: [ 'doc' ],
     createMockXhr: [],
     createPredicateFn: 
      [ 'expression',
        'comparator',
        'anyPropertyKey',
        'matchAgainstAnyProp' ],
     cssKebabToCamel: [ 'name' ],
     currencyFilter: [ '$locale' ],
     dateFilter: [ '$locale' ],
     dateGetter: [ 'name', 'size', 'offset', 'trim', 'negWrap' ],
     dateStrGetter: [ 'name', 'shortForm', 'standAlone' ],
     dealoc: [ 'obj' ],
     decodePath: [ 'path', 'html5Mode' ],
     deepCompare: 
      [ 'actual',
        'expected',
        'comparator',
        'anyPropertyKey',
        'matchAgainstAnyProp',
        'dontMatchWholeObject' ],
     defaultHandlerWrapper: [ 'element', 'event', 'handler' ],
     defaultHttpResponseTransform: [ 'data', 'headers' ],
     defaults: [ 'dst', 'src' ],
     directiveLinkingFn: 
      [ 'nodesetLinkingFn',
        'scope',
        'node',
        'rootElement',
        'boundTranscludeFn' ],
     directiveNormalize: [ 'name' ],
     emailInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     encodePath: [ 'path' ],
     encodeUriQuery: [ 'val', 'pctEncodeSpaces' ],
     encodeUriSegment: [ 'val' ],
     ensureDecimalSep: [ 'pattern' ],
     equals: [ 'o1', 'o2' ],
     eraGetter: [ 'date', 'formats' ],
     errorHandlingConfig: [ 'config' ],
     extend: [ 'dst' ],
     extractArgs: [ 'fn' ],
     extractCurrencySymbols: [ 'content' ],
     extractDateTimeSymbols: [ 'content', 'localeInfo' ],
     extractElementNode: [ 'element' ],
     extractNumberSymbols: [ 'content', 'localeInfo', 'currencySymbols' ],
     extractValues: [ 'stream', 'propertiesToExtract', 'callback' ],
     filterFilter: [],
     findConstantAndWatchExpressions: [ 'ast', '$filter', 'parentIsPure' ],
     findLocaleId: [ 'str', 'type' ],
     fnCamelCaseReplace: [ 'all', 'letter' ],
     forEach: [ 'obj', 'iterator', 'context' ],
     forEachSorted: [ 'obj', 'iterator', 'context' ],
     formatNumber: [ 'number', 'pattern', 'groupSep', 'decimalSep', 'fractionSize' ],
     FormController: [ '$element', '$attrs', '$scope', '$animate', '$interpolate' ],
     fromJson: [ 'json' ],
     fthey: [ 'msg', 'vals', 'spec' ],
     generateCode: [ 'validRanges' ],
     generateFixture: [ 'test', 'query' ],
     generateFunction: [ 'positiveElements', 'functionName' ],
     generateInputCompilerHelper: [ 'helper' ],
     getAliasedAttrName: [ 'name' ],
     getBaseUrl: [],
     getBeginOperator: [ 'opEnd' ],
     getBlockNodes: [ 'nodes' ],
     getBooleanAttrName: [ 'element', 'name' ],
     getBuild: [],
     getCssDelayStyle: [ 'delay', 'isKeyframeAnimation' ],
     getCssKeyframeDurationStyle: [ 'duration' ],
     getCssTransitionDurationStyle: [ 'duration', 'applyOnlyDuration' ],
     getDecimals: [ 'n' ],
     getDomNode: [ 'element' ],
     getEndOperator: [ 'opBegin' ],
     getFirstThursdayOfYear: [ 'year' ],
     getInfoForLocale: [ 'localeInfo', 'localeID' ],
     getInputs: [ 'body' ],
     getNavGroup: [ 'pages', 'area', 'pageSorter', 'pageMapper' ],
     getNgAttribute: [ 'element', 'ngAttr' ],
     getParamNames: [],
     getStringValue: [ 'name' ],
     getter: [ 'obj', 'path', 'bindFnToScope' ],
     getTestability: [ 'rootElement' ],
     getThursdayThisWeek: [ 'datetime' ],
     getTypeForFilter: [ 'val' ],
     getUsageAs: [ 'type', 'directiveName' ],
     getValueOf: [ 'value' ],
     getVF: [ 'n', 'opt_precision' ],
     getWT: [ 'v', 'f' ],
     hasCustomToString: [ 'obj' ],
     hashKey: [ 'obj', 'nextUidFn' ],
     headersGetter: [ 'headers' ],
     humanList: [ 'values', 'sep', 'lastSep' ],
     IDC_Y: [ 'cp' ],
     identifierForController: [ 'controller', 'ident' ],
     identity: [ '$' ],
     IDS_Y: [ 'cp' ],
     ifDefined: [ 'v', 'd' ],
     includes: [ 'array', 'obj' ],
     indexToLineAndColumn: [ 'text', 'index' ],
     inherit: [ 'parent', 'extra' ],
     instantiateRoute: [ '$injector' ],
     InterpolationParts: [ 'trustedContext', 'allOrNothing' ],
     InterpolationPartsWatcher: [ 'interpolationParts', 'scope', 'listener', 'objectEquality' ],
     isArray: [ 'arr' ],
     isArrayBuffer: [ 'obj' ],
     isArrayLike: [ 'obj' ],
     isAssignable: [ 'ast' ],
     isBlankObject: [ 'value' ],
     isBlob: [ 'obj' ],
     isBoolean: [ 'value' ],
     isConstant: [ 'ast' ],
     isCssVisible: [ 'node' ],
     isDate: [ 'value' ],
     isDefined: [ 'value' ],
     isElement: [ 'node' ],
     isEmptyObject: [ 'obj' ],
     isError: [ 'value' ],
     isFile: [ 'obj' ],
     isFormData: [ 'obj' ],
     isFunction: [ 'value' ],
     isJsonLike: [ 'str' ],
     isLiteral: [ 'ast' ],
     isNumber: [ 'value' ],
     isNumberInteger: [ 'num' ],
     isObject: [ 'value' ],
     isObjectEmpty: [ 'obj' ],
     isPromiseLike: [ 'obj' ],
     isPure: [ 'node', 'parentIsPure' ],
     isRegExp: [ 'value' ],
     isScope: [ 'obj' ],
     isStateExceptionHandled: [ 'state' ],
     isStateless: [ '$filter', 'filterName' ],
     isString: [ 'value' ],
     isSuccess: [ 'status' ],
     isTypedArray: [ 'value' ],
     isUndefined: [ 'value' ],
     isValidDottedPath: [ 'path' ],
     isValidForStep: [ 'viewValue', 'stepBase', 'step' ],
     isValidIdentifierContinue: [ 'ch', 'cp' ],
     isValidIdentifierStart: [ 'ch', 'cp' ],
     isValidObjectMaxDepth: [ 'maxDepth' ],
     isWindow: [ 'obj' ],
     JQLite: [ 'element' ],
     jqLiteAcceptsData: [ 'node' ],
     jqLiteAddClass: [ 'element', 'cssClasses' ],
     jqLiteAddNodes: [ 'root', 'elements' ],
     jqLiteBuildFragment: [ 'html', 'context' ],
     jqLiteCacheSize: [],
     jqLiteClone: [ 'element' ],
     jqLiteController: [ 'element', 'name' ],
     jqLiteData: [ 'element', 'key', 'value' ],
     jqLiteDealoc: [ 'element', 'onlyDescendants' ],
     jqLiteDocumentLoaded: [ 'action', 'win' ],
     jqLiteEmpty: [ 'element' ],
     jqLiteExpandoStore: [ 'element', 'createIfNecessary' ],
     jqLiteHasClass: [ 'element', 'selector' ],
     jqLiteHasData: [ 'node' ],
     jqLiteInheritedData: [ 'element', 'name', 'value' ],
     jqLiteIsTextNode: [ 'html' ],
     jqLiteOff: [ 'element', 'type', 'fn', 'unsupported' ],
     jqLiteParseHTML: [ 'html', 'context' ],
     jqLiteReady: [ 'fn' ],
     jqLiteRemove: [ 'element', 'keepData' ],
     jqLiteRemoveClass: [ 'element', 'cssClasses' ],
     jqLiteRemoveData: [ 'element', 'name' ],
     jqLiteWrapNode: [ 'node', 'wrapper' ],
     jqNextId: [],
     jsonFilter: [],
     jsonStringToDate: [ 'string' ],
     kebabToCamel: [ 'name' ],
     limitToFilter: [],
     locationGetter: [ 'property' ],
     locationGetterSetter: [ 'property', 'preprocess' ],
     LocationHashbangInHtml5Url: [ 'appBase', 'appBaseNoFile', 'hashPrefix' ],
     LocationHashbangUrl: [ 'appBase', 'appBaseNoFile', 'hashPrefix' ],
     LocationHtml5Url: [ 'appBase', 'appBaseNoFile', 'basePrefix' ],
     longEraGetter: [ 'date', 'formats' ],
     lookupDottedPath: [ 'obj', 'path' ],
     main: [],
     makeMap: [ 'str' ],
     makeSwipeDirective: [ 'directiveName', 'direction', 'eventName' ],
     markQExceptionHandled: [ 'q' ],
     markQStateExceptionHandled: [ 'state' ],
     merge: [ 'dst' ],
     mergeAnimationDetails: [ 'element', 'oldAnimation', 'newAnimation' ],
     mergeClasses: [ 'a', 'b' ],
     MessageFormatParser: 
      [ 'text',
        'startIndex',
        '$parse',
        'pluralCat',
        'stringifier',
        'mustHaveExpression',
        'trustedContext',
        'allOrNothing' ],
     MessageSelectorBase: [ 'expressionFn', 'choices' ],
     MessageSelectorWatchers: [ 'msgSelector', 'scope', 'listener', 'objectEquality' ],
     middlewareFactory: [ 'base' ],
     minErr: [ 'module', 'ErrorConstructor' ],
     MockDocument: [],
     MockHttpExpectation: [ 'method', 'url', 'data', 'headers', 'keys' ],
     MockWindow: [ 'options' ],
     MockXhr: [],
     ModelOptions: [ 'options' ],
     NestedParserState: [ 'parser' ],
     newTestLocaleInfo: [],
     nextUid: [],
     ngDirective: [ 'directive' ],
     NgMapShim: [],
     ngMessageDirectiveFactory: [ 'isDefault' ],
     NgModelController: 
      [ '$scope',
        '$exceptionHandler',
        '$attr',
        '$element',
        '$parse',
        '$animate',
        '$timeout',
        '$q',
        '$interpolate' ],
     ngViewFactory: [ '$route', '$anchorScroll', '$animate' ],
     ngViewFillContentFactory: [ '$compile', '$controller', '$route' ],
     nodeName_: [ 'element' ],
     nodesetLinkingFn: [ 'scope', 'nodeList', 'rootElement', 'boundTranscludeFn' ],
     noop: [],
     nullFormRenameControl: [ 'control', 'name' ],
     numberFilter: [ '$locale' ],
     numberFormatterParser: [ 'ctrl' ],
     numberInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     orderByFilter: [ '$parse' ],
     outputLocale: [ 'localeInfo', 'localeID' ],
     packageStyles: [ 'options' ],
     padNumber: [ 'num', 'digits', 'trim', 'negWrap' ],
     padNumberInMock: [ 'num', 'digits', 'trim' ],
     parse: [ 'numStr' ],
     parseAbsoluteUrl: [ 'absoluteUrl', 'locationObj' ],
     parseAppUrl: [ 'url', 'locationObj', 'html5Mode' ],
     parseConstantExpr: [ '$parse', 'context', 'name', 'expression', 'fallback' ],
     parseHeaders: [ 'headers' ],
     parseKeyValue: [ 'keyValue' ],
     parseMaxTime: [ 'str' ],
     parseNumberAttrVal: [ 'val' ],
     parsePattern: [ 'pattern' ],
     Parser: [ 'lexer', '$filter', 'options' ],
     parseTextLiteral: [ 'text' ],
     pendClasses: [ 'classes', 'fix', 'isPrefix' ],
     pending: [],
     pluralExtractor: [ 'content', 'localeInfo' ],
     PluralMessage: [ 'expressionFn', 'choices', 'offset', 'pluralCat' ],
     PluralMessageProto: [],
     plusFn: [ 'l', 'r' ],
     prepareAnimateOptions: [ 'options' ],
     prepareAnimationOptions: [ 'options' ],
     provideLog: [ '$provide' ],
     publishExternalAPI: [ 'angular' ],
     qFactory: [ 'nextTick', 'exceptionHandler', 'errorOnUnhandledRejections' ],
     radioInputType: [ 'scope', 'element', 'attr', 'ctrl' ],
     rangeInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     registerHDirective: [ 'i' ],
     registerRestorableStyles: [ 'backup', 'node', 'properties' ],
     reloadWithDebugInfo: [],
     removeComments: [ 'jqNodes' ],
     removeFromArray: [ 'arr', 'val' ],
     removeIfEmptyData: [ 'element' ],
     reportOrFail: [ 'message' ],
     resolveElementClasses: [ 'existing', 'toAdd', 'toRemove' ],
     reverseParams: [ 'iteratorFn' ],
     rewriteAngularSrc: [ 'src', 'query' ],
     rewriteTestFile: [ 'testname', 'testfile' ],
     roundNumber: [ 'parsedNumber', 'fractionSize', 'minFrac', 'maxFrac' ],
     sanitizeText: [ 'chars' ],
     SelectMessage: [ 'expressionFn', 'choices' ],
     SelectMessageProto: [],
     serializeContent: [ 'localeObj' ],
     serializeObject: [ 'obj', 'maxDepth' ],
     serializeValue: [ 'v' ],
     serverBase: [ 'url' ],
     setHashKey: [ 'obj', 'h' ],
     setOptionSelectedStatus: [ 'optionEl', 'value' ],
     setupModelWatcher: [ 'ctrl' ],
     setupModuleLoader: [ 'window' ],
     setupValidity: [ 'instance' ],
     shallowClearAndCopy: [ 'src', 'dst' ],
     shallowCopy: [ 'src', 'dst' ],
     SimpleChange: [ 'previous', 'current' ],
     simpleCompare: [ 'a', 'b' ],
     sliceArgs: [ 'args', 'startIndex' ],
     sliceFn: [ 'input', 'begin', 'end' ],
     snake_case: [ 'name', 'separator' ],
     snakeToCamel: [ 'name' ],
     sortedHtml: [ 'element', 'showNgClass' ],
     specialMouseHandlerWrapper: [ 'target', 'event', 'handler' ],
     splitClasses: [ 'classes' ],
     spyOnlyCallsWithArgs: [ 'obj', 'method' ],
     startingTag: [ 'element' ],
     startsWith: [ 'str', 'search' ],
     stat: [ 'path' ],
     stringBasedInputType: [ 'ctrl' ],
     stringify: [ 'value' ],
     stringifyFn: [ 'fn' ],
     stringStream: [ 'str' ],
     stripBaseUrl: [ 'base', 'url' ],
     stripCommentsFromElement: [ 'element' ],
     stripFile: [ 'url' ],
     stripHash: [ 'url' ],
     subtractOffset: [ 'expressionFn', 'offset' ],
     testExists: [ 'testname' ],
     textInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     they: [ 'msg', 'vals', 'spec' ],
     timeZoneGetter: [ 'date', 'formats', 'offset' ],
     timezoneToOffset: [ 'timezone', 'fallback' ],
     toDebugString: [ 'obj', 'maxDepth' ],
     toInt: [ 'str' ],
     toJson: [ 'obj', 'pretty' ],
     toJsonReplacer: [ 'key', 'value' ],
     tokenDifference: [ 'str1', 'str2' ],
     toKeyValue: [ 'obj' ],
     trace: [ 'name' ],
     transformData: [ 'data', 'headers', 'status', 'fns' ],
     trimEmptyHash: [ 'url' ],
     truthyTimingValue: [ 'val' ],
     tryDecodeURIComponent: [ 'value' ],
     UNINITIALIZED_VALUE: [],
     urlInputType: [ 'scope', 'element', 'attr', 'ctrl', '$sniffer', '$browser' ],
     urlIsAllowedOriginFactory: [ 'whitelistedOriginUrls' ],
     urlIsSameOrigin: [ 'requestUrl' ],
     urlIsSameOriginAsBaseUrl: [ 'requestUrl' ],
     urlResolve: [ 'url' ],
     urlsAreSameOrigin: [ 'url1', 'url2' ],
     valueFn: [ 'value' ],
     weekGetter: [ 'size' ],
     weekParser: [ 'isoWeek', 'existingDate' ],
     xthey: [ 'msg', 'vals', 'spec' ] } }
