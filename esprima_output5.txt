******************************************
******************************************
R_1.7.1.txt
******************************************
******************************************
------------------------------------------
docs/gulpfile.js
------------------------------------------
[
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "Literal",
      "value": "use strict",
      "raw": "'use strict'"
    },
    "directive": "use strict"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "gulp"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp",
              "raw": "'gulp'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "concat"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-concat",
              "raw": "'gulp-concat'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "eslint"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-eslint",
              "raw": "'gulp-eslint'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "Dgeni"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "dgeni",
              "raw": "'dgeni'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "merge"
        },
        "init": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "event-stream",
                "raw": "'event-stream'"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "merge"
          }
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "path"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "canonical-path",
              "raw": "'canonical-path'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "foreach"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-foreach",
              "raw": "'gulp-foreach'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "uglify"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-uglify",
              "raw": "'gulp-uglify'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "sourcemaps"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-sourcemaps",
              "raw": "'gulp-sourcemaps'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "rename"
        },
        "init": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "gulp-rename",
              "raw": "'gulp-rename'"
            }
          ]
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "outputFolder"
        },
        "init": {
          "type": "Literal",
          "value": "../build/docs",
          "raw": "'../build/docs'"
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "src"
        },
        "init": {
          "type": "Literal",
          "value": "app/src/**/*.js",
          "raw": "'app/src/**/*.js'"
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "ignoredFiles"
        },
        "init": {
          "type": "Literal",
          "value": "!src/angular.bind.js",
          "raw": "'!src/angular.bind.js'"
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "assets"
        },
        "init": {
          "type": "Literal",
          "value": "app/assets/**/*",
          "raw": "'app/assets/**/*'"
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "getMergedEslintConfig"
        },
        "init": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "filepath"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "configFile"
                      },
                      "computed": false,
                      "value": {
                        "type": "Identifier",
                        "name": "filepath"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "baseConfig"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": "../.eslintrc.json",
                        "raw": "'../.eslintrc.json'"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "rules"
                      },
                      "computed": false,
                      "value": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "strict"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "off",
                              "raw": "'off'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "eol-last",
                              "raw": "'eol-last'"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "off",
                              "raw": "'off'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "linebreak-style",
                              "raw": "'linebreak-style'"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "off",
                              "raw": "'off'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "no-alert",
                              "raw": "'no-alert'"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "off",
                              "raw": "'off'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "no-trailing-spaces",
                              "raw": "'no-trailing-spaces'"
                            },
                            "computed": false,
                            "value": {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Literal",
                                  "value": "error",
                                  "raw": "'error'"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "skipBlankLines",
                                        "raw": "'skipBlankLines'"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Literal",
                                        "value": true,
                                        "raw": "true"
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "quotes"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "off",
                              "raw": "'off'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          }
                        ]
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "ignore"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "useEslintrc"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "VariableDeclaration",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": {
          "type": "Identifier",
          "name": "copyComponent"
        },
        "init": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "component"
            },
            {
              "type": "Identifier",
              "name": "pattern"
            },
            {
              "type": "Identifier",
              "name": "base"
            },
            {
              "type": "Identifier",
              "name": "sourceFolder"
            },
            {
              "type": "Identifier",
              "name": "packageFile"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pattern"
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "Identifier",
                      "name": "pattern"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "/**/*",
                      "raw": "'/**/*'"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "base"
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "Identifier",
                      "name": "base"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "",
                      "raw": "''"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sourceFolder"
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "Identifier",
                      "name": "sourceFolder"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "../node_modules",
                      "raw": "'../node_modules'"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "packageFile"
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "Identifier",
                      "name": "packageFile"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "package.json",
                      "raw": "'package.json'"
                    }
                  }
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "version"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "resolve"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "sourceFolder"
                              },
                              {
                                "type": "Identifier",
                                "name": "component"
                              },
                              {
                                "type": "Identifier",
                                "name": "packageFile"
                              }
                            ]
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "version"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "gulp"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "src"
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "sourceFolder"
                              },
                              "right": {
                                "type": "Literal",
                                "value": "/",
                                "raw": "'/'"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "component"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "pattern"
                          }
                        },
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "base"
                              },
                              "computed": false,
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "sourceFolder"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "component"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "/",
                                    "raw": "'/'"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "base"
                                }
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "pipe"
                    }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "gulp"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "dest"
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "outputFolder"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "/components/",
                                  "raw": "'/components/'"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "component"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "-",
                              "raw": "'-'"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "version"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      }
    ],
    "kind": "var"
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "build-app",
          "raw": "'build-app'"
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "file"
                    },
                    "init": {
                      "type": "Literal",
                      "value": "docs.js",
                      "raw": "'docs.js'"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "minFile"
                    },
                    "init": {
                      "type": "Literal",
                      "value": "docs.min.js",
                      "raw": "'docs.min.js'"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "folder"
                    },
                    "init": {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "outputFolder"
                      },
                      "right": {
                        "type": "Literal",
                        "value": "/js/",
                        "raw": "'/js/'"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "gulp"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "src"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "src"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ignoredFiles"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "pipe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sourcemaps"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "init"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "pipe"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "concat"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "file"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "pipe"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "gulp"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "dest"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "folder"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "pipe"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "rename"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "minFile"
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pipe"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "uglify"
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "sourcemaps"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "write"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": ".",
                              "raw": "'.'"
                            }
                          ]
                        }
                      ]
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "pipe"
                    }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "gulp"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "dest"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "folder"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "assets",
          "raw": "'assets'"
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "JS_EXT"
                    },
                    "init": {
                      "type": "Literal",
                      "value": {},
                      "raw": "/\\.js$/",
                      "regex": {
                        "pattern": "\\.js$",
                        "flags": ""
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "merge"
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "gulp"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "src"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Literal",
                                  "value": "img/**/*",
                                  "raw": "'img/**/*'"
                                }
                              ]
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "gulp"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "dest"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "outputFolder"
                              },
                              "right": {
                                "type": "Literal",
                                "value": "/img",
                                "raw": "'/img'"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "gulp"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "src"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Identifier",
                                  "name": "assets"
                                }
                              ]
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "gulp"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "dest"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "outputFolder"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "gulp"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "src"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Identifier",
                                  "name": "assets"
                                }
                              ]
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "foreach"
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "file"
                                }
                              ],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "JS_EXT"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "test"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "file"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "relative"
                                          }
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "minFile"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "file"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "relative"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "replace"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "JS_EXT"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": ".min.js",
                                                    "raw": "'.min.js'"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "stream"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "pipe"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourcemaps"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "init"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "pipe"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "concat"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "minFile"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pipe"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "uglify"
                                                        },
                                                        "arguments": []
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "pipe"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sourcemaps"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "write"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": ".",
                                                        "raw": "'.'"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "pipe"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "gulp"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "dest"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "outputFolder"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "generator": false,
                              "expression": false,
                              "async": false
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "bootstrap",
                          "raw": "'bootstrap'"
                        },
                        {
                          "type": "Literal",
                          "value": "/dist/css/bootstrap?(.min).css",
                          "raw": "'/dist/css/bootstrap?(.min).css'"
                        },
                        {
                          "type": "Literal",
                          "value": "dist",
                          "raw": "'dist'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "bootstrap",
                          "raw": "'bootstrap'"
                        },
                        {
                          "type": "Literal",
                          "value": "/dist/fonts/*",
                          "raw": "'/dist/fonts/*'"
                        },
                        {
                          "type": "Literal",
                          "value": "dist",
                          "raw": "'dist'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "open-sans-fontface",
                          "raw": "'open-sans-fontface'"
                        },
                        {
                          "type": "Literal",
                          "value": "/fonts/{Regular,Semibold,Bold}/*",
                          "raw": "'/fonts/{Regular,Semibold,Bold}/*'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "lunr",
                          "raw": "'lunr'"
                        },
                        {
                          "type": "Literal",
                          "value": "/lunr?(.min).js",
                          "raw": "'/lunr?(.min).js'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "google-code-prettify",
                          "raw": "'google-code-prettify'"
                        },
                        {
                          "type": "Literal",
                          "value": "/**/{lang-css,prettify}.js",
                          "raw": "'/**/{lang-css,prettify}.js'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "jquery",
                          "raw": "'jquery'"
                        },
                        {
                          "type": "Literal",
                          "value": "/dist/jquery.js",
                          "raw": "'/dist/jquery.js'"
                        },
                        {
                          "type": "Literal",
                          "value": "dist",
                          "raw": "'dist'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "marked",
                          "raw": "'marked'"
                        },
                        {
                          "type": "Literal",
                          "value": "/lib/marked.js",
                          "raw": "'/lib/marked.js'"
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "copyComponent"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "marked",
                          "raw": "'marked'"
                        },
                        {
                          "type": "Literal",
                          "value": "/marked.min.js",
                          "raw": "'/marked.min.js'"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "doc-gen",
          "raw": "'doc-gen'"
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "dgeni"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Dgeni"
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "require"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "./config",
                                  "raw": "'./config'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "dgeni"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "generate"
                        }
                      },
                      "arguments": []
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "catch"
                    }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "process"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "exit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "eslint",
          "raw": "'eslint'"
        },
        {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Literal",
              "value": "doc-gen",
              "raw": "'doc-gen'"
            }
          ]
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "examplesConfig"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "getMergedEslintConfig"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../docs/app/test/.eslintrc.json",
                          "raw": "'../docs/app/test/.eslintrc.json'"
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "examplesConfig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "envs"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "Literal",
                        "value": "browser",
                        "raw": "'browser'"
                      }
                    ]
                  }
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "protractorConfig"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "getMergedEslintConfig"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../docs/app/e2e/.eslintrc.json",
                          "raw": "'../docs/app/e2e/.eslintrc.json'"
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "protractorConfig"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "rules"
                      }
                    },
                    "property": {
                      "type": "Literal",
                      "value": "no-unused-vars",
                      "raw": "'no-unused-vars'"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "Literal",
                        "value": "error",
                        "raw": "'error'"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "vars"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "local",
                              "raw": "'local'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "args"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "none",
                              "raw": "'none'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "varsIgnorePattern"
                            },
                            "computed": false,
                            "value": {
                              "type": "Literal",
                              "value": "^rootEl$",
                              "raw": "'^rootEl$'"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "merge"
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "gulp"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "src"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "outputFolder"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "/examples/**/*.js",
                                            "raw": "'/examples/**/*.js'"
                                          }
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "!",
                                              "raw": "'!'"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "outputFolder"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "/examples/**/protractor.js",
                                            "raw": "'/examples/**/protractor.js'"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "pipe"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "eslint"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "examplesConfig"
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pipe"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "eslint"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "format"
                                }
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "eslint"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "failAfterError"
                            }
                          },
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "gulp"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "src"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "outputFolder"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "/ptore2e/**/*.js",
                                            "raw": "'/ptore2e/**/*.js'"
                                          }
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "outputFolder"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "/examples/**/protractor.js",
                                            "raw": "'/examples/**/protractor.js'"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "pipe"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "eslint"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "protractorConfig"
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pipe"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "eslint"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "format"
                                }
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pipe"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "eslint"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "failAfterError"
                            }
                          },
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "default",
          "raw": "'default'"
        },
        {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Literal",
              "value": "assets",
              "raw": "'assets'"
            },
            {
              "type": "Literal",
              "value": "doc-gen",
              "raw": "'doc-gen'"
            },
            {
              "type": "Literal",
              "value": "build-app",
              "raw": "'build-app'"
            },
            {
              "type": "Literal",
              "value": "eslint",
              "raw": "'eslint'"
            }
          ]
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "gulp"
        },
        "property": {
          "type": "Identifier",
          "name": "task"
        }
      },
      "arguments": [
        {
          "type": "Literal",
          "value": "watch",
          "raw": "'watch'"
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "gulp"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "watch"
                    }
                  },
                  "arguments": [
                    {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "src"
                        },
                        {
                          "type": "Identifier",
                          "name": "ignoredFiles"
                        },
                        {
                          "type": "Identifier",
                          "name": "assets"
                        }
                      ]
                    },
                    {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "assets",
                          "raw": "'assets'"
                        },
                        {
                          "type": "Literal",
                          "value": "build-app",
                          "raw": "'build-app'"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  }
]
++++++++++++++++++++++++++++++++++++++++++
docs/gulpfile.js
++++++++++++++++++++++++++++++++++++++++++
Library: event-stream
Methods Called:
   - merge

Library: gulp
Methods Called:
   - src
   - dest
   - task
   - watch

Library: gulp-concat
Methods Called:
   - main_method*

Library: gulp-eslint
Methods Called:
   - main_method*
   - format
   - failAfterError

Library: dgeni
Methods Called:
   - main_method*

Library: canonical-path
Methods Called:
   - resolve

Library: gulp-foreach
Methods Called:
   - main_method*

Library: gulp-uglify
Methods Called:
   - main_method*

Library: gulp-sourcemaps
Methods Called:
   - init
   - write

Library: gulp-rename
Methods Called:
   - main_method*

All of the Methods:
{ 'event-stream': { merge: true },
  gulp: { src: true, dest: true, task: true, watch: true },
  'gulp-concat': { 'main_method*': true },
  'gulp-eslint': { 'main_method*': true, format: true, failAfterError: true },
  dgeni: { 'main_method*': true },
  'canonical-path': { resolve: true },
  'gulp-foreach': { 'main_method*': true },
  'gulp-uglify': { 'main_method*': true },
  'gulp-sourcemaps': { init: true, write: true },
  'gulp-rename': { 'main_method*': true } }
